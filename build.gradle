plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.netflix.dgs.codegen' version '6.2.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:11.1.0'
	implementation 'com.graphql-java-kickstart:graphql-java-tools:11.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql:42.7.4'
	implementation 'org.apache.poi:poi-scratchpad:5.2.3'
	implementation 'org.apache.poi:poi-ooxml:5.2.3'
	implementation 'org.apache.xmlbeans:xmlbeans:5.0.2'
	implementation 'org.apache.poi:poi-ooxml-schemas:4.1.2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

generateJava {
	schemaPaths = ["${projectDir}/src/main/resources/graphql-client"]
	packageName = 'com.example.practiceNLMK.codegen'
	generateClient = true
}

tasks.named('test') {
	useJUnitPlatform()
}
